/* eslint-disable no-undef */
describe('UserFlow', () => {
  beforeEach(() => {
    cy.intercept('GET', 'https://deckofcardsapi.com/api/deck/new/',{  
      "success": true,
      "deck_id": "777",
      "remaining": 4,
      "shuffled": true
    })
    cy.visit('/')
  })

  it('Should sucessfully load upon initial visit', () => {
    cy.get('button')
    cy.get('.message-bar')
      .should('be.visible')
      .get('.moon-face')
      .should('be.visible')
      .get('.dialog')
      .should('have.text','Do you wish to craft a Moon challenge card?')
    cy.get('.dummy-card')
      .should('be.visible')
      .get('.terms > .count')
      .should('have.text', 'âˆž')
    cy.get('.rules')
      .get('.rules > h2')
      .should('have.text', 'Talents')
      .get('.rules > :nth-child(2) > h3')
      .should('have.text', 'Mind')
      .get('.rules > :nth-child(3) > h3')
      .should('have.text', 'Spirit')
      .get('.rules > :nth-child(4) > h3')
      .should('have.text', 'Wisdom')
      .get('.rules > :nth-child(5) > h3')
      .should('have.text', 'Vitality')
      .get('.rules > :nth-child(2) > p')
      .should('include.text', 'Repetition over intellect')
      .get('.rules > :nth-child(3) > p')
      .should('include.text', 'your soul. Just')
      .get('.rules > :nth-child(4) > p')
      .should('include.text', 'perspective. The moon')
      .get('.rules > :nth-child(5) > p')
      .should('include.text', 'your muscles. You')
    cy.get('.create-button')
      .should('have.text', 'Create a moon card')
    cy.get('.start-button')
      .should('have.text', 'I\'m content')
    cy.get('.creation-form') 
      .get('[for="talent"]')  
      .should('have.text', 'Choose a talent')
      .get('#talents')
      .should('have.text', ' Talents MindSpiritWisdomVitality')
      .get('[for="count"]')
      .should('have.text', 'Choose a number between 1 and 13.')
      .get('#count')
      .should('exist')
      .get('[for="terms"]')
      .should('have.text', 'Write your terms.')
      .get('#terms')
      .should('have.attr', 'placeholder', 'Enter your challenge here')
      .get('[for="intervals"]')
      .should('have.text', 'Choose an interval.')
      .get('#intervals')
      .should('include.text', 'minutesrepetitionscountspageschaptersarticlesmilesreps of 10ounces')      
    })
    it('Should be able to successfully make a new card', () => {
    cy.get('#talents')
      .select('Spirit')
      .should('have.value', 'Spirit')
    cy.get('input[type=range]')
      .click({ force: true })
      .trigger("change")
      .invoke("val", 2)
      .should('have.value', 2)
    cy.get('#terms')
      .type('Meditate for').should('have.value', 'Meditate for')
    cy.get('#intervals')
      .select('minutes')
      .should('have.value', 'minutes')
    cy.get('.card-content')
      .get('h2.talent')
      .should('have.text', 'Spirit')
      .get('.card-content > .terms')
      .should('have.text', 'Meditate for7minutes')
      .get('.create-button')
      .click()
    cy.get('.card-content')
      .should('include.text', 'You did it!')
      .should('include.text', 'You made a moon card!')
    cy.get('.card-content > h2')
      .should('not.be.visible')
    })
  it('Should be able to load the game upon visit', () => {
    cy.get('.start-button')
      .click()
    cy.get('.card-spread')
      .should('be.visible')
    cy.get(':nth-child(3) > a > .inner-card > .card-front > .card-content')
      .should('exist')
    cy.get(':nth-child(3) > a').click({ force: true })
    cy.get(':nth-child(3) > a').click({ force: true })
    cy.get('.moon-card').first().trigger('mouseover')
      .should('be.visible')
    })  
})